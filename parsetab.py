
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DECIMAL DIVISION MULTIPLICACION NUMERO PARENTESIS_DER PARENTESIS_IZQ RESTA SUMAexpresion : termino SUMA expresion\n                 | termino RESTA expresion\n                 | terminotermino : factor MULTIPLICACION termino\n              | factor DIVISION termino\n              | factorfactor : NUMERO\n             | DECIMAL\n             | PARENTESIS_IZQ expresion PARENTESIS_DER'
    
_lr_action_items = {'NUMERO':([0,6,7,8,9,10,],[4,4,4,4,4,4,]),'DECIMAL':([0,6,7,8,9,10,],[5,5,5,5,5,5,]),'PARENTESIS_IZQ':([0,6,7,8,9,10,],[6,6,6,6,6,6,]),'$end':([1,2,3,4,5,12,13,14,15,16,],[0,-3,-6,-7,-8,-1,-2,-4,-5,-9,]),'SUMA':([2,3,4,5,14,15,16,],[7,-6,-7,-8,-4,-5,-9,]),'RESTA':([2,3,4,5,14,15,16,],[8,-6,-7,-8,-4,-5,-9,]),'PARENTESIS_DER':([2,3,4,5,11,12,13,14,15,16,],[-3,-6,-7,-8,16,-1,-2,-4,-5,-9,]),'MULTIPLICACION':([3,4,5,16,],[9,-7,-8,-9,]),'DIVISION':([3,4,5,16,],[10,-7,-8,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expresion':([0,6,7,8,],[1,11,12,13,]),'termino':([0,6,7,8,9,10,],[2,2,2,2,14,15,]),'factor':([0,6,7,8,9,10,],[3,3,3,3,3,3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expresion","S'",1,None,None,None),
  ('expresion -> termino SUMA expresion','expresion',3,'p_expresion','lexer.py',68),
  ('expresion -> termino RESTA expresion','expresion',3,'p_expresion','lexer.py',69),
  ('expresion -> termino','expresion',1,'p_expresion','lexer.py',70),
  ('termino -> factor MULTIPLICACION termino','termino',3,'p_termino','lexer.py',81),
  ('termino -> factor DIVISION termino','termino',3,'p_termino','lexer.py',82),
  ('termino -> factor','termino',1,'p_termino','lexer.py',83),
  ('factor -> NUMERO','factor',1,'p_factor','lexer.py',95),
  ('factor -> DECIMAL','factor',1,'p_factor','lexer.py',96),
  ('factor -> PARENTESIS_IZQ expresion PARENTESIS_DER','factor',3,'p_factor','lexer.py',97),
]
